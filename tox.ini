[tox]
envlist=
    py{35}-{core,p2p,database,transactions,vm,blockchain}
    py{35}-rpc-blockchain-{main,exploit,wallet}
    py{35}-rpc-state-{contractspam,callcreatecallcode,quadratic}
    py{35}-rpc-state-main-{frontier,homestead,eip150,eip158,byzantium}
    py{35}-state-{frontier,homestead,eip150,eip158,byzantium,constantinople,metropolis}
    flake8
    mypy

[flake8]
max-line-length= 100
exclude=
ignore=

[testenv]
usedevelop=True
passenv =
    PYTEST_ADDOPTS
    TRAVIS_EVENT_TYPE
commands=
    core: py.test {posargs:tests/core/ tests/rpc/ -k 'not test_rpc_against_fixtures'}
    p2p: py.test {posargs:evm/p2p}
    database: py.test {posargs:tests/database}
    rpc-blockchain-main: py.test {posargs:tests/rpc/test_rpc_fixtures.py -k 'not GeneralStateTests and not bcExploitTest and not walletReorganizeOwners'}
    rpc-blockchain-exploit: py.test {posargs:tests/rpc/test_rpc_fixtures.py -k 'not GeneralStateTests and bcExploitTest'}
    rpc-blockchain-wallet: py.test {posargs:tests/rpc/test_rpc_fixtures.py -k 'not GeneralStateTests and walletReorganizeOwners'}
    rpc-state-main-frontier: py.test {posargs:tests/rpc/test_rpc_fixtures.py -k 'GeneralStateTests and not ContractCreationSpam and not stCallCreateCallCodeTest and not stQuadraticComplexityTest and Frontier'}
    rpc-state-main-homestead: py.test {posargs:tests/rpc/test_rpc_fixtures.py -k 'GeneralStateTests and not ContractCreationSpam and not stCallCreateCallCodeTest and not stQuadraticComplexityTest and Homestead'}
    rpc-state-main-eip150: py.test {posargs:tests/rpc/test_rpc_fixtures.py -k 'GeneralStateTests and not ContractCreationSpam and not stCallCreateCallCodeTest and not stQuadraticComplexityTest and EIP150'}
    rpc-state-main-eip158: py.test {posargs:tests/rpc/test_rpc_fixtures.py -k 'GeneralStateTests and not ContractCreationSpam and not stCallCreateCallCodeTest and not stQuadraticComplexityTest and EIP158'}
    rpc-state-main-byzantium: py.test {posargs:tests/rpc/test_rpc_fixtures.py -k 'GeneralStateTests and not ContractCreationSpam and not stCallCreateCallCodeTest and not stQuadraticComplexityTest and Byzantium'}
    rpc-state-contractspam: py.test {posargs:tests/rpc/test_rpc_fixtures.py -k 'GeneralStateTests and ContractCreationSpam'}
    rpc-state-callcreatecallcode: py.test {posargs:tests/rpc/test_rpc_fixtures.py -k 'GeneralStateTests and stCallCreateCallCodeTest'}
    rpc-state-quadratic: py.test {posargs:tests/rpc/test_rpc_fixtures.py -k 'GeneralStateTests and stQuadraticComplexityTest'}
    transactions: py.test {posargs:tests/json-fixtures/test_transactions.py}
    vm: py.test {posargs:tests/json-fixtures/test_virtual_machine.py}
    blockchain: py.test {posargs:tests/json-fixtures/test_blockchain.py}
    state-frontier: py.test {posargs:tests/json-fixtures/test_state.py -k Frontier}
    state-homestead: py.test {posargs:tests/json-fixtures/test_state.py -k Homestead}
    state-eip150: py.test {posargs:tests/json-fixtures/test_state.py -k EIP150}
    state-eip158: py.test {posargs:tests/json-fixtures/test_state.py -k EIP158}
    state-byzantium: py.test {posargs:tests/json-fixtures/test_state.py -k Byzantium}
    state-constantinople: py.test {posargs:tests/json-fixtures/test_state.py -k Constantinople}
    state-metropolis: py.test {posargs:tests/json-fixtures/test_state.py -k Metropolis}
deps = -r{toxinidir}/requirements-dev.txt
    coincurve
    database: leveldb
basepython =
    py35: python3.5

[testenv:flake8]
basepython=python
deps=flake8==3.5.0
commands=
    flake8 {toxinidir}/evm
    flake8 {toxinidir}/tests --exclude=""

[testenv:mypy]
basepython=python3.5
deps=mypy
setenv=MYPYPATH={toxinidir}:{toxinidir}/stubs
# TODO: Drop --ignore-missing-imports once we have type annotations for eth_utils, coincurve and cytoolz
commands=mypy --follow-imports=silent --ignore-missing-imports -p evm.p2p
